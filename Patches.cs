// tables that diverge from RMT 1.28 unpatched for patched versions

using System;
using System.Collections.Generic;
using System.Diagnostics;


namespace RMT
{
    public partial class Player
    {
        //-------------------------------------------------------------------------------------------------------------------

        void SetVersion()
        {
            switch (m_rmtData.m_rmtVersion)
            {
                case ModuleData.RMTVersion._128Unpatched:
                    tabbeganddistor = tabbeganddistor_128Unpatched;
                    frqtab = frqtab_128Unpatched;
                    frqtabbasshi = frqtabbasshi_128Unpatched;

                    break;
                case ModuleData.RMTVersion._128Patch8:
                    tabbeganddistor = tabbeganddistor_128Patch8;
                    frqtab = frqtab_128Patch8;
                    frqtabbasshi = null;
                    break;
                case ModuleData.RMTVersion._127Patch6:
                    tabbeganddistor = tabbeganddistor_127Patch6;
                    frqtab = frqtab_128Unpatched;
                    frqtabbasshi = frqtabbasshi_127Patch6;
                    break;
                case ModuleData.RMTVersion._128CustomTables:
                    tabbeganddistor = tabbeganddistor_Custom;
                    frqtab = frqtab_Custom;
                    frqtabbasshi = frqtabbasshi_Custom;
                    break;
            }
        }

        //-------------------------------------------------------------------------------------------------------------------
        int[] tabbeganddistor;
        byte[] frqtab;
        byte[] frqtabbasshi;

        const int frqtabbassloOffset = 0x40;

        //-------------------------------------------------------------------------------------------------------------------
        static int[] tabbeganddistor_128Unpatched = new int[]
        {
            (byte)FrqTab.frqtabpure,0x00,
            (byte)FrqTab.frqtabpure,0x20,
            (byte)FrqTab.frqtabpure,0x40,
            (byte)FrqTab.frqtabbass1,0xc0,
            (byte)FrqTab.frqtabpure,0x80,
            (byte)FrqTab.frqtabpure,0xa0,
            (byte)FrqTab.frqtabbass1,0xc0,
            (byte)FrqTab.frqtabbass2,0xc0,
        };

        enum FrqTab
        {
            frqtab_ = 0,
            frqtabbass1 = 0,
            frqtabbass2 = 0x40,
            frqtabpure = 0x80,
        }


        static byte[] frqtab_128Unpatched = new byte[] //	ERT [<frqtab]!=0	;* frqtab must begin at the memory page bound! (i.e. $..00 address)
        {
//frqtabbass1
	         0xBF,0xB6,0xAA,0xA1,0x98,0x8F,0x89,0x80,0xF2,0xE6,0xDA,0xCE,0xBF,0xB6,0xAA,0xA1,
	         0x98,0x8F,0x89,0x80,0x7A,0x71,0x6B,0x65,0x5F,0x5C,0x56,0x50,0x4D,0x47,0x44,0x3E,
	         0x3C,0x38,0x35,0x32,0x2F,0x2D,0x2A,0x28,0x25,0x23,0x21,0x1F,0x1D,0x1C,0x1A,0x18,
	         0x17,0x16,0x14,0x13,0x12,0x11,0x10,0x0F,0x0E,0x0D,0x0C,0x0B,0x0A,0x09,0x08,0x07,
//frqtabbass2
	         0xFF,0xF1,0xE4,0xD8,0xCA,0xC0,0xB5,0xAB,0xA2,0x99,0x8E,0x87,0x7F,0x79,0x73,0x70,
	         0x66,0x61,0x5A,0x55,0x52,0x4B,0x48,0x43,0x3F,0x3C,0x39,0x37,0x33,0x30,0x2D,0x2A,
	         0x28,0x25,0x24,0x21,0x1F,0x1E,0x1C,0x1B,0x19,0x17,0x16,0x15,0x13,0x12,0x11,0x10,
	         0x0F,0x0E,0x0D,0x0C,0x0B,0x0A,0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,
//frqtabpure
	         0xF3,0xE6,0xD9,0xCC,0xC1,0xB5,0xAD,0xA2,0x99,0x90,0x88,0x80,0x79,0x72,0x6C,0x66,
	         0x60,0x5B,0x55,0x51,0x4C,0x48,0x44,0x40,0x3C,0x39,0x35,0x32,0x2F,0x2D,0x2A,0x28,
	         0x25,0x23,0x21,0x1F,0x1D,0x1C,0x1A,0x18,0x17,0x16,0x14,0x13,0x12,0x11,0x10,0x0F,
	         0x0E,0x0D,0x0C,0x0B,0x0A,0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,0x00,
        };


        static byte[] frqtabbasshi_128Unpatched = new byte[]
        {
//frqtabbasshi
	        0x0D,0x0D,0x0C,0x0B,0x0B,0x0A,0x0A,0x09,0x08,0x08,0x07,0x07,0x07,0x06,0x06,0x05,
	        0x05,0x05,0x04,0x04,0x04,0x04,0x03,0x03,0x03,0x03,0x03,0x02,0x02,0x02,0x02,0x02,
	        0x02,0x02,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,
	        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//frqtabbasslo
	        0xF2,0x33,0x96,0xE2,0x38,0x8C,0x00,0x6A,0xE8,0x6A,0xEF,0x80,0x08,0xAE,0x46,0xE6,
	        0x95,0x41,0xF6,0xB0,0x6E,0x30,0xF6,0xBB,0x84,0x52,0x22,0xF4,0xC8,0xA0,0x7A,0x55,
	        0x34,0x14,0xF5,0xD8,0xBD,0xA4,0x8D,0x77,0x60,0x4E,0x38,0x27,0x15,0x06,0xF7,0xE8,
	        0xDB,0xCF,0xC3,0xB8,0xAC,0xA2,0x9A,0x90,0x88,0x7F,0x78,0x70,0x6A,0x64,0x5E,0x00,
        };


        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------

        //--- 1.28 patch 8 tables
        static int[] tabbeganddistor_128Patch8 = new int[]
        {
            (int)FrqTab_128Patch8.frqtabpure,0x00,
            (int)FrqTab_128Patch8.frqtabpoly5,0x20,
            (int)FrqTab_128Patch8.frqtabsawtooth,0xa0,
            (int)FrqTab_128Patch8.frqtabpure,0xc0,
            (int)FrqTab_128Patch8.frqtabcldghi,0xa0,
            (int)FrqTab_128Patch8.frqtabpure,0xa0,
            (int)FrqTab_128Patch8.frqtabpoly4,0xc0,
            (int)FrqTab_128Patch8.frqtabpure,0x80,
        };

//; RMT 1.28 Patch 8 tables:
//; ------------------------
//; RMT 1.28 Patch 8, 'clarinet / distortion guitar', 1.79 MHz & 16-bits, low byte
//; RMT distortion 6 / E
//; PoKey distortion C (poly 4) / 8 (poly 9!)
//; 64 (32 + 32) bytes


        static byte[] frqtabcldglo = new byte[]
        {
            //frqtabcllo
	        0x73,0xDE,0x58,0xF0,0x97,0x4D,0x21,0x04,0xE7,0xE8,0xF8,0x17,
	        0x36,0x73,0xB0,0xFC,0x48,0xA3,0x0D,0x77,0xF0,0x78,0xF1,0x88,
	        0x1F,0xB6,0x4D,0xF3,0xA8,0x4E,0x03,0xB8,
            //frqtabdglo 
	        0xB1,0xB5,0xB9,0xBC,
	        0xC0,0xC3,0xC6,0xC9,0xCC,0xCE,0xD1,0xD3,0xD5,0xD7,0xD9,0xDB,
	        0xDC,0xDE,0xE0,0xE1,0xE2,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,
	        0xEB,0xEC,0xEC,0xED,
        };

        enum FrqTab_128Patch8
        {
            frqtab_         = 0,
            frqtabpure      = 0,
            frqtabpurebass  = 0,
            frqtabpureflute = 48,
            frqtabpoly5     = 48+12,
            frqtabpoly4     = 48+12+48,
            frqtabpolydeg41 = frqtabpoly4,
            frqtabpolydeg43 = 48+12+48+31,
            frqtabsawtooth  = 48+12+48+31+17,
            frqtabcldghi    = 48+12+48+31+17+36,
            frqtabclhi      = frqtabcldghi,
            frqtabdghi      = 48+12+48+31+17+36+32,
        }

        //; RMT 1.28 Patch 8, 'pure bass / pure flute', 15 kHz / 1.79 MHz
        //; RMT distortion A
        //; PoKey distortion A
        //; 60 (48 + 12) bytes

        static byte[] frqtab_128Patch8 = new byte[]
        {

        //frqtabpurebass
	         0xFF,0xF1,0xE3,0xD6,0xCA,0xBF,0xB4,0xAA,0xA0,0x97,0x8F,0x87,
	         0x7F,0x78,0x71,0x6B,0x65,0x5F,0x5A,0x54,0x50,0x4B,0x47,0x43,
	         0x3F,0x3B,0x38,0x35,0x32,0x2F,0x2C,0x2A,0x27,0x25,0x23,0x21,
	         0x1F,0x1D,0x1C,0x1A,0x18,0x17,0x16,0x14,0x13,0x12,0x11,0x10,

        //frqtabpureflute
	         0xE0,0xD3,0xC7,0xBC,0xB1,0xA7,0x9D,0x94,0x8C,0x84,0x7C,0x75,

        //; RMT 1.28 Patch 8, 'high notes', 1.79 MHz
        //; RMT distortion 2
        //; PoKey distortion 2 (poly 5)
        //; 48 bytes

        //frqtabpoly5
	         0xE7,0xDA,0xCE,0xC2,0xB7,0xAC,0xA2,0x99,0x90,0x88,0x80,0x79,
	         0x72,0x6B,0x65,0x5F,0x5A,0x54,0x4F,0x4B,0x46,0x42,0x3E,0x3B,
	         0x37,0x34,0x30,0x2D,0x2B,0x28,0x26,0x23,0x21,0x1F,0x1D,0x1C,
	         0x19,0x18,0x16,0x15,0x13,0x12,0x11,0x10,0x0F,0x0E,0x0D,0x0C,

        //; RMT 1.28 Patch 8, 'very high notes', 1.79 MHz
        //; RMT distortion C
        //; PoKey distortion C (poly 4, degenerate 1 / 3)
        //; 48 (31 + 17) bytes

        //frqtabpoly4

        //frqtabpolydeg41
	         0xF0,0xE1,0xD5,0xCA,0xBD,0xB2,0xA8,0x9D,0x96,0x8E,0x84,0x7C,
	         0x76,0x70,0x69,0x63,0x5D,0x57,0x52,0x4E,0x49,0x45,0x40,0x3C,
	         0x39,0x36,0x31,0x30,0x2D,0x2A,0x27,

        //frqtabpolydeg43
	         0xEF,0xE3,0xD4,0xC8,0xBC,
	         0xB3,0xA7,0x9E,0x95,0x8C,0x86,0x7D,0x77,0x6E,0x68,0x62,0x5C,

        //; RMT 1.28 Patch 8, 'sawtooth / triangle', 1.79 MHz, filter / double voice
        //; RMT distortion 4
        //; PoKey distortion A
        //; 36 bytes

        //frqtabsawtooth
	         0x74,0x71,0x6E,0x6A,0x67,0x64,0x61,0x5E,0x5B,0x59,0x56,0x53,
	         0x51,0x4E,0x4C,0x4A,0x48,0x45,0x43,0x41,0x3F,0x3D,0x3B,0x3A,
	         0x38,0x36,0x35,0x33,0x31,0x30,0x2E,0x2D,0x2B,0x2A,0x29,0x27,

        //; RMT 1.28 Patch 8, 'harmonic square undertones of clarinet / distortion guitar', 1.79 MHz & 16-bits, high byte
        //; RMT distortion 8
        //; PoKey distortion A
        //; 64 bytes

        //frqtabcldghi 

        //frqtabclhi
	         0x1C,0x1A,0x19,0x17,0x16,0x15,0x14,0x13,0x11,0x10,0x0F,0x0F,
	         0x0E,0x0D,0x0C,0x0B,0x0B,0x0A,0x0A,0x09,0x08,0x08,0x07,0x07,
	         0x07,0x06,0x06,0x05,0x05,0x05,0x05,0x04,

        //frqtabdghi
	         0x8F,0x87,0x7F,0x79,
	         0x71,0x6B,0x65,0x5F,0x59,0x55,0x4F,0x4B,0x47,0x43,0x3F,0x3B,
	         0x39,0x35,0x31,0x2F,0x2D,0x29,0x27,0x25,0x23,0x21,0x1F,0x1D,
	         0x1B,0x19,0x19,0x17
        };
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------

        //--- 1.27 patch 6 tables

        static int[] tabbeganddistor_127Patch6 =
        {
            (int)FrqTab.frqtabpure,0x00,
            (int)FrqTab.frqtabpure,0x20,
            (int)FrqTab.frqtabpure,0x40,
            (int)FrqTab.frqtabbass1,0xa0, //; MUX "this was: dta frqtabbass1-frqtab,0xc0"
            (int)FrqTab.frqtabpure,0x80,
            (int)FrqTab.frqtabpure,0xa0,
            (int)FrqTab.frqtabbass1,0xc0,
            (int)FrqTab.frqtabbass2,0xc0,
        };

        static byte[] frqtabbasshi_127Patch6 =
        {   // ; MUX "Patch 6 data"
	        0xd1,0xc5,0xbc,0xb2,0xa8,0x9e,0x96,0x8d,0x85,0x7e,0x77,0x70,0x69,0x64,0x5e,0x58,
	        0x53,0x4e,0x4a,0x46,0x42,0x3e,0x3b,0x37,0x34,0x31,0x2e,0x2c,0x29,0x27,0x25,0x22,
	        0x21,0x1f,0x1d,0x1b,0x1a,0x18,0x17,0x15,0x14,0x13,0x12,0x11,0x10,0x0f,0x0e,0x0d,
	        0x0c,0x0c,0x0b,0x0a,0x0a,0x09,0x09,0x08,0x07,0x07,0x07,0x06,0x06,0x05,0x05,0x00,

//        static byte[] frqtabbasslo_127Patch6 =
	        0x2e,0xfd,0xca,0x3e,0x48,0x34,0x00,0x36,0x98,0x36,0x01,0x80,0x78,0x32,0x1a,0x7a,
	        0xbb,0xcf,0x6a,0x50,0x72,0xd0,0x6a,0xf5,0xbc,0xce,0xfe,0x4c,0xb8,0x60,0x26,0xfb,
	        0x0c,0x2c,0x5b,0xa8,0x13,0x9c,0x43,0xf9,0xa0,0x92,0x48,0x49,0x3b,0x5a,0x79,0x98,
	        0xd5,0x21,0x6d,0xc8,0x14,0x7e,0x06,0x70,0xf8,0x71,0x08,0x90,0x36,0xdc,0x82,0x00,
        };

        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        //-------------------------------------------------------------------------------------------------------------------
        public const int NoteTableLen = 0x40;

        static public int[] tabbeganddistor_Custom = null;
        static public byte[] frqtab_Custom = null;
        static public byte[] frqtabbasshi_Custom = null;


    }

}